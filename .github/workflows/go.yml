name: Build Go

on:
  push:
    paths-ignore:
      - '.github/workflows/android.yml'
      - 'android/**'

env:
  GO_VERSION: "1.21"
  BEEPER_BRIDGE_TYPE: imessagego
  CI_REGISTRY_IMAGE: "${{ secrets.CI_REGISTRY }}/bridge/imessagego"
  GHCR_REGISTRY: ghcr.io
  GHCR_REGISTRY_IMAGE: "ghcr.io/${{ github.repository }}"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          export PATH="$HOME/go/bin:$PATH"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Lint
        run: pre-commit run -a

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install libolm
        run: sudo apt-get install libolm-dev libolm3

      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: |
          go test -v -json ./... -cover | gotestfmt

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Beeper docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CI_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          cache-from: ${{ env.CI_REGISTRY_IMAGE }}:latest
          pull: true
          file: Dockerfile
          tags: |
            ${{ env.CI_REGISTRY_IMAGE }}:${{ github.sha }}
            ${{ env.GHCR_REGISTRY_IMAGE }}:${{ github.sha }}
          push: true
          build-args: |
            COMMIT_HASH=${{ github.sha }}

  deploy-docker:
    runs-on: ubuntu-latest
    needs:
      - lint
      - build-docker
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to Beeper docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CI_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: beeper/docker-retag-push-latest@main
        with:
          image: ${{ env.CI_REGISTRY_IMAGE }}

      - uses: beeper/docker-retag-push-latest@main
        with:
          image: ${{ env.GHCR_REGISTRY_IMAGE }}

      - name: Run bridge CD tool
        uses: beeper/bridge-cd-tool@main
        env:
          CI_REGISTRY: "${{ secrets.CI_REGISTRY }}"
          BEEPER_DEV_ADMIN_API_URL: "${{ secrets.BEEPER_DEV_ADMIN_API_URL }}"
          BEEPER_STAGING_ADMIN_API_URL: "${{ secrets.BEEPER_STAGING_ADMIN_API_URL }}"
          BEEPER_PROD_ADMIN_API_URL: "${{ secrets.BEEPER_PROD_ADMIN_API_URL }}"
          BEEPER_DEV_ADMIN_NIGHTLY_PASS: "${{ secrets.BEEPER_DEV_ADMIN_NIGHTLY_PASS }}"
          BEEPER_STAGING_ADMIN_NIGHTLY_PASS: "${{ secrets.BEEPER_STAGING_ADMIN_NIGHTLY_PASS }}"
          BEEPER_PROD_ADMIN_NIGHTLY_PASS: "${{ secrets.BEEPER_PROD_ADMIN_NIGHTLY_PASS }}"
